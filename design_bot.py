from bot_token import BOT_TOKEN
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, executor


# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
bot = Bot(BOT_TOKEN, parse_mode='HTML')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def cmd_start(message: types.Message):
    file = open('img/first_img.jpg', 'rb')
    text_1 = ("<b>–ü—Ä–∏–≤–µ—Ç!üëãüèª\n"
            "–≠—Ç–æ –º–∞–≥–∞–∑–∏–Ω –¥–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏—Ö –≤–µ—â–µ–π –¥–ª—è –¥–æ–º–∞</b>")
    text_2 = ("<b>–ù–∞–ø–∏—à–∏ —Å–≤–æ—ë –∏–º—è</b>")
    await message.answer(text_1.upper())
    await message.answer_photo(file)
    await message.answer(text_2.upper())

@dp.message_handler(content_types='text')
async def cmd_name(message: types.Message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ö–∞—Ä—Ç–∏–Ω—ã –∏–∑ —Å–º–æ–ª—ã", callback_data='paintings'))
    markup.add(types.InlineKeyboardButton("–í–∞–∑—ã –∏–∑ –≥–∏–ø—Å–∞", callback_data='vases'))
    markup.add(types.InlineKeyboardButton("–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —á–∞—Å—ã", callback_data='clocks'))
    text_3 = (f"<b>–ü—Ä–∏–≤–µ—Ç{1}!\n"
               f"–≤—ã–±–∏—Ä–∞–π, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å –¥–ª—è —Å–≤–æ–µ–≥–æ\n"
               f"–ª—é–±–∏–º–æ–≥–æ ‚ù§Ô∏è –¥–æ–º–∞</b>")
    await message.answer(text_3.upper(), reply_markup=markup)

@dp.callback_query_handler()
async def callback(call):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ë–æ–ª—å—à–µ - –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ", url='https://github.com/Maxxx-VS?tab=repositorie'))
    file_1 = open('img/paint.jpg', 'rb')
    file_2 = open('img/vase.jpeg', 'rb')
    file_3 = open('img/clock.jpg', 'rb')
    if call.data == 'paintings':
        await call.message.answer_photo(file_1, reply_markup=markup)
    if call.data == 'vases':
        await call.message.answer_photo(file_2, reply_markup=markup)
    if call.data == 'clocks':
        await call.message.answer_photo(file_3, reply_markup=markup)











# executor.start_polling(dp)

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())